[BASIC]
console = False
# 网页登录buff和steam后，把浏览器的cookie贴到这里，才能运行。推荐从Chrome中复制，下面是两条示例cookie
buff_cookie = NTES_P_UTID=oi45ECyc9vimiwhQL9FXlNuZw8ZNurhl|1642351054; nts_mail_user=zhihengfeng5371@163.com:-1:1; _ntes_nnid=9508e913970485febc1cbb8be7593ecc,1642351060815; _ntes_nuid=9508e913970485febc1cbb8be7593ecc; Device-Id=eWcEzEvFhKWCtrz32S8Z; Locale-Supported=zh-Hans; game=csgo; _gid=GA1.2.634373948.1644855710; _ga=GA1.2.1717407131.1644855710; YD_SC_SID=EEC3C3E158964AE1AD5C85DFD4FB350E; NTES_YD_SESS=.z6F3KoMARd8L3_7xXZ5CLbQADwphFsOKeLf3xjkuqn3O1zGOBYERDVThICwgF9rkVuuAMZuHzoiFURpo_RCl_7emgdoMfMIsgbbMXg6Vt9o2_GlfpoSk2tZU6.VrT1jECpk6Y_V65kHJt_ZbQpbFeDkOhWUcAtGteU_4C9YTDp.C00PTZg0UmrhNc5shdtEDXMRv_zTSBJWRAAKahd3XQMUnXeSmBcyA; S_INFO=1644855797|0|0&60##|15656565371; P_INFO=15656565371|1644855797|1|netease_buff|00&99|null&null&null#jis&320100#10#0#0|&0|null|15656565371; remember_me=U1098153993|jx25UYdjTipFUElHZOJZkODGY95Y0Byc; session=1-j1wbry61R7GpN5YqQk6Yy499TypuoKKli9270LIXJS2X2042240849; _gat_gtag_UA_109989484_1=1; csrf_token=IjgwOGY1OWNiMjQ3MTk3MDNiMzE5NzFlN2E4NDRiODQyZWIzOGE2YzIi.FOwVqw.TsbBBLjXG0hu2W0NEvU6fjBEveE

steam_cookie = sessionid=bf455a14be6f8952314982e1; timezoneOffset=28800,0; _ga=GA1.2.1904300320.1642084116; _gid=GA1.2.799948318.1644853662; recentlyVisitedAppHubs=730; app_impressions=730@2_9_100006_100202; steamCountry=HK|eb50459e84513c7290171a50635df739; steamLoginSecure=76561199165776137||970266CBD2077683D18701F956457E0894A9295A; steamMachineAuth76561199165776137=7C537C38F3D2765A3CB4B0050B90A81B349B2BFC; browserid=2355948718024555118

# 获取登陆buff时的User-Agent，和获取cookie的方式相同。如果不使用自己的user-agent，留空即可（不建议），程序会随机一个user-agent。
# 为了减弱被封禁的风险，强烈建议把自己的user-agent贴在此处。例如：Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36
buff_user_agent =

# 提供一个代理来访问Steam社区市场。如果不需要代理即可直接访问市场，直接留空即可
proxy = socks5://127.0.0.1:7890

# 控制程序行为
[BEHAVIOR]
# 警告：鉴于buff现在爬得太多会账号冷却一段时间，建议搞大一点！！！
# 现在从buff上获取的信息很少，爬取间隔调大之后，基本不影响整体的爬取速度。
# 爬取间隔下限：10s
frequency_interval_low=10
# 爬取间隔上限：15s。即：每10-15s爬取一次
frequency_interval_high=15
# 重新爬取已缓存文件的小时间隔
url_cache_hour = 6
# 无视缓存爬取数据
force_crawl = False
# 一次请求的超时重试次数
retry_times = 3

# 基本参数设置
[COMMON]
# steam扣税比例
steam_sell_tax = 0.15

# 过滤行为
[FILTER]
# 爬取物品的最低价格，价格过低则不考虑
crawl_min_price_item = 100
# 爬取物品的最高价格
crawl_max_price_item = 300
# 7天交易历史，少于该阈值则认为是冷门物品，不考虑
min_sold_threshold = 70
# 爬取类别白名单，如只想爬取AK和M4（A1 & A4），则设置为：["weapon_ak47", "weapon_m4a1", "weapon_m4a1_silencer"]
# 具体类别参考`config/reference/category.md`，详见README
# 黑白名单均支持通配符匹配，如'weapon_knife*'等，更多用法请搜索 "Shell 通配符"，不懂也无所谓
category_white_list = []
# 爬取类别黑名单。如果黑名单白名单同时存在，白名单优先级更高
# 默认的黑名单加了以下内容，排除掉乱七八糟的武器箱音乐盒印花探员之类的，刀也排除掉了（不会真有人steam里卖刀吧:D）
category_black_list = ["*sticker*", "*knife*", "csgo_type_tool", "csgo_type_spray", "csgo_type_collectible", "csgo_type_ticket", "csgo_tool_gifttag", "csgo_type_musickit", "csgo_type_weaponcase", "csgo_tool_weaponcase_keytag", "type_customplayer", "csgo_tool_patch"]

# 结果设置
[RESULT]
# 每一项建议只显示这么多条数据
top_n = 20
